[package]
name = "masp_proofs"
description = "Experimental MASP zk-SNARK circuits and proving APIs, based on zcash_proofs"
version.workspace = true
authors = ["Jack Grigg <jack@z.cash>", "joe <joe@heliax.dev>"]
homepage = "https://github.com/namada-net/masp"
repository = "https://github.com/namada-net/masp"
readme = "README.md"
license = "MIT OR Apache-2.0"
edition = "2024"
rust-version = "1.85"
categories = ["cryptography::cryptocurrencies"]

[package.metadata.docs.rs]
all-features = true

[dependencies]
masp_primitives = { version = "1.4.0", path = "../masp_primitives" }

# Dependencies exposed in a public API:
# (Breaking upgrades to these require a breaking upgrade to this crate.)
bellman = { version = "0.14", default-features = false, features = ["groth16"] }
bls12_381 = { package = "nam-bls12_381", version = "0.8.1-nam.0" }
group = "0.13"
jubjub = { package = "nam-jubjub", version = "0.10.1-nam.0" }
lazy_static = "1"
minreq = { version = "2.11.0", features = ["https"], optional = true }
rand_core = "0.6"
tracing = "0.1"

# Dependencies used internally:
# (Breaking upgrades to these are usually backwards-compatible, but check MSRVs.)
blake2b_simd = "1"
directories = { version = "5.0", optional = true }
# This pulls the reddsa library that contains hardcoded personalizations and basepoints. If you need to work on a new project consider forking `reddsa`, modifying it to your needs and patching it in the root manifest
redjubjub = {package = "nam-redjubjub", version = "0.7.1-nam.0" }
getrandom = { version = "0.2" }
itertools = "0.14"

[dev-dependencies]
byteorder = "1"
criterion = "0.5"
rand_xorshift = "0.3"

[target.'cfg(unix)'.dev-dependencies]
pprof = { version = "0.14", features = ["criterion", "flamegraph"] }

[features]
default = ["local-prover", "multicore"]
bundled-prover = []
download-params = ["minreq", "directories"]
local-prover = ["directories"]
multicore = ["bellman/multicore"]
embed-verifying-key = []
benchmarks = []
js = ["getrandom/js"]

[lib]
bench = false

[[bench]]
name = "sapling"
harness = false
required-features = ["local-prover"]

[[bench]]
name = "convert"
harness = false
required-features = ["local-prover"]

[[example]]
name = "get-params-path"
required-features = ["directories"]

[[example]]
name = "download-params"
required-features = ["download-params"]

[[example]]
name = "serialize-params"
required-features = ["download-params"]

[badges]
maintenance = { status = "actively-developed" }

